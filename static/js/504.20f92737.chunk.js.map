{"version":3,"file":"static/js/504.20f92737.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","components/EditContactModal/EditContactModal.styled.js","components/EditContactModal/EditContactModal.js","components/Loader/Loader.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactFilter/Filter.js","components/ContactEditor/ContactEditor.js","pages/Contacts.js"],"sourcesContent":["import { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nconst ContactForm = ({\n  name = '',\n  email = '',\n  phone = '',\n  onSubmit,\n  btnText,\n}) => {\n  const [contactName, setContactName] = useState(name);\n  const [contactPhone, setContactPhone] = useState(phone);\n  const [contactEmail, setContactEmail] = useState(email);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value.trim();\n    const phone = form.elements.phone.value.trim();\n    const email = form.elements.email.value.trim();\n\n    const contact = { name, phone, email };\n\n    onSubmit(contact);\n    setContactName('');\n    setContactPhone('');\n    setContactEmail('');\n\n    form.reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'phone':\n        setContactPhone(value);\n        break;\n\n      case 'email':\n        setContactEmail(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '360px',\n        width: '100%',\n        p: '10px',\n      }}\n      autoComplete=\"off\"\n      required={true}\n      error=\"true\"\n      validate=\"true\"\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        label=\"Name\"\n        name=\"name\"\n        type=\"name\"\n        size=\"small\"\n        onChange={handleChange}\n        value={contactName}\n        sx={{ width: '100%' }}\n        required\n      />\n      <TextField\n        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n        label=\"Phone\"\n        name=\"phone\"\n        type=\"phone\"\n        size=\"small\"\n        sx={{ width: '100%' }}\n        onChange={handleChange}\n        value={contactPhone}\n        required\n      />\n\n      <TextField\n        label=\"Email\"\n        name=\"email\"\n        type=\"email\"\n        size=\"small\"\n        sx={{ width: '100%' }}\n        onChange={handleChange}\n        value={contactEmail}\n        required\n      />\n\n      <Button\n        sx={{ width: '120px', mx: 'auto' }}\n        type=\"submit\"\n        variant=\"outlined\"\n        size=\"small\"\n      >\n        {btnText}\n      </Button>\n    </Box>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  btnText: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 99;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  width: auto;\n  padding: 24px;\n  background-color: white;\n`;\n\nexport const ModalCloseBtn = styled.button`\n display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    cursor: pointer;\n    top: 10px;\n    right: 10px;\n\n    width: 20px;\n    height: 20px;\n   \n    border-radius: 50%;\n    box-shadow: 0px 6px 6px 0px var(--button-bg-cl);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    background-color: var(--main-bg-cl);\n\n    font-size: 16px;\n    color: var(--main-text-cl);\n\n    transition: all 250ms linear;\n\n    &:focus,\n    &:hover {\n        background-color: var(--button-bg-cl);\n        border: 1px solid transparent;\n        fill: var(--main-bg-cl);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25)`;\n","import { ContactForm } from 'components/ContactForm';\nimport { Overlay, Modal, ModalCloseBtn } from './EditContactModal.styled';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { RxCross1 } from 'react-icons/rx';\nimport PropTypes from 'prop-types';\n\nimport {\n  useFetchContactsQuery,\n  useUpdateContactMutation,\n} from 'redux/contacts/slice';\n\nconst EditContactModal = ({ closeModal, id }) => {\n  const { data: contacts } = useFetchContactsQuery();\n\n  const [updateContact] = useUpdateContactMutation();\n  const handleCloseModal = () => closeModal(false);\n  const findContactById = contacts.filter(contact => contact._id === id);\n\n  const handleUpdateContact = async fields => {\n    try {\n      await updateContact({ id, ...fields });\n      toast.success('Contact is updated');\n\n      handleCloseModal();\n    } catch (error) {\n      toast.error('Contact is not updated');\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <Modal>\n        {contacts && (\n          <ContactForm\n            name={findContactById[0].name}\n            phone={findContactById[0].phone}\n            email={findContactById[0].email}\n            btnText=\"Save\"\n            onSubmit={handleUpdateContact}\n          />\n        )}\n        <ModalCloseBtn type=\"button\" onClick={handleCloseModal}>\n          <RxCross1 size={32} />\n        </ModalCloseBtn>\n      </Modal>\n    </Overlay>\n  );\n};\n\nEditContactModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default EditContactModal;\n","import { RotatingLines } from 'react-loader-spinner';\nexport default function ImagesPendungView() {\n  return (\n    <RotatingLines\n      strokeColor=\"#1976d2\"\n      strokeWidth=\"3\"\n      animationDuration=\"0.75\"\n      width=\"14\"\n      visible={true}\n    />\n  );\n}\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  list-style: disc;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const FavoriteBtn = styled.button`\n  border: none;\n  background-color: transparent;\n`;\n\nexport const Btn = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  text-align: center;\n  text-transform: uppercase;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.transparent};\n  box-shadow: 0 0 20px ${p => p.theme.colors.accent};\n  color: ${p => p.theme.colors.white};\n  background: ${p => p.theme.colors.primary};\n  background-size: 200% auto;\n  cursor: pointer;\n  transition: ${p => p.theme.transition.main};\n  &:hover {\n    color: ${p => p.theme.colors.primary};\n    text-decoration: none;\n    background: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.primary};\n  }\n`;\n","import { useState } from 'react';\nimport {\n  useDeleteContactMutation,\n  useUpdateFavoriteMutation,\n} from 'redux/contacts/slice';\nimport { EditContactModal } from 'components/EditContactModal';\nimport { Loader } from 'components/Loader';\n// import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport Button from '@mui/material/Button';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport GradeIcon from '@mui/icons-material/Grade';\nimport StarOutlineIcon from '@mui/icons-material/StarOutline';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { FavoriteBtn } from './ContactItem.styled';\n\nconst ContactItem = ({ _id, name, phone, email, favorite }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const [updateFavorite] = useUpdateFavoriteMutation();\n\n  const handleFavorite = e => {\n    e.preventDefault();\n    updateFavorite({ _id, favorite: String(!favorite) });\n  };\n\n  const handleDelete = e => {\n    e.preventDefault();\n    deleteContact(_id);\n    toast.warning(`Contact is deleted`);\n  };\n  return (\n    <TableRow>\n      <TableCell>\n        <FavoriteBtn type=\"button\" onClick={handleFavorite}>\n          {favorite ? <GradeIcon /> : <StarOutlineIcon />}\n        </FavoriteBtn>\n      </TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{phone}</TableCell>\n      <TableCell>{email}</TableCell>\n      <TableCell>\n        <Button\n          variant=\"contained\"\n          type=\"button\"\n          onClick={() => {\n            setOpenModal(true);\n          }}\n        >\n          <EditIcon />\n        </Button>\n      </TableCell>\n      <TableCell>\n        <Button\n          variant=\"contained\"\n          type=\"button\"\n          disabled={isDeleting}\n          onClick={handleDelete}\n        >\n          {isDeleting ? <Loader /> : <PersonRemoveIcon />}\n        </Button>\n      </TableCell>\n      {openModal && <EditContactModal closeModal={setOpenModal} id={_id} />}\n    </TableRow>\n  );\n};\n\n// ContactItem.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n// };\n\nexport default ContactItem;\n","import { useFetchContactsQuery } from 'redux/contacts/slice';\nimport { getFilter } from 'redux/contacts/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem';\n\nimport Typography from '@mui/material/Typography';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport { Loader } from 'components/Loader';\n\nconst ContactList = () => {\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n  console.log(contacts);\n  const filter = useSelector(getFilter);\n  const filtredContacts = !contacts\n    ? []\n    : contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {contacts?.length === 0 ? (\n        <Typography variant=\"h6\" component=\"h2\" align=\"center\" color=\"#1976d2\">\n          Your contactlist is empty\n        </Typography>\n      ) : (\n        <TableContainer component={Paper}>\n          <Typography\n            variant=\"h6\"\n            component=\"h2\"\n            align=\"center\"\n            color=\"#1976d2\"\n          >\n            Your Contact List here\n          </Typography>\n          <Table sx={{ minWidth: 250 }} size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Favorite</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Phone</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Edit</TableCell>\n                <TableCell>Delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filtredContacts.map(contact => (\n                <ContactItem key={contact._id} {...contact} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleSearch = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <Box\n      width=\"50%\"\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Typography variant=\"h6\" component=\"h2\" color=\"#1976d2\">\n        Find contact by name\n      </Typography>\n      <TextField\n        id=\"standard-search\"\n        type=\"search\"\n        variant=\"standard\"\n        onChange={handleSearch}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/slice';\nimport { ContactForm } from 'components/ContactForm';\nimport { toast } from 'react-toastify';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nconst ContactEditor = () => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const handleAddContact = async values => {\n    console.log(contacts);\n    const isExist = contacts.find(contact => contact.name === values.name);\n    if (isExist) {\n      toast.error(`${values.name} is already in contacts.`);\n      return;\n    }\n    try {\n      await addContact(values);\n      toast.success(`${values.name} is added to Phonebook.`);\n    } catch (error) {\n      toast.error(`error`);\n    }\n  };\n\n  return (\n    <Box\n      width=\"50%\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch', mx: 'auto' },\n      }}\n    >\n      <Typography variant=\"h6\" component=\"h2\" align=\"center\" color=\"#1976d2\">\n        Add Contact\n      </Typography>\n      <ContactForm\n        btnText={`Add contact`}\n        onSubmit={handleAddContact}\n      ></ContactForm>\n    </Box>\n  );\n};\n\nexport default ContactEditor;\n","import { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/ContactFilter';\nimport { ContactEditor } from 'components/ContactEditor';\nimport Box from '@mui/material/Box';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          gap: 20,\n          flexDirection: { xs: 'column', sm: 'row' },\n          alignItems: 'center',\n        }}\n      >\n        <ContactEditor />\n        <Filter />\n      </Box>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["name","email","phone","onSubmit","btnText","useState","contactName","setContactName","contactPhone","setContactPhone","contactEmail","setContactEmail","handleChange","e","target","value","Box","component","sx","display","flexDirection","gap","maxWidth","width","p","autoComplete","required","error","validate","preventDefault","form","elements","trim","reset","TextField","label","type","size","onChange","inputProps","inputMode","pattern","Button","mx","variant","Overlay","styled","Modal","ModalCloseBtn","closeModal","id","contacts","useFetchContactsQuery","data","useUpdateContactMutation","updateContact","handleCloseModal","findContactById","filter","contact","_id","handleUpdateContact","fields","toast","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","onClick","currentTarget","ImagesPendungView","strokeColor","strokeWidth","animationDuration","visible","FavoriteBtn","theme","space","borders","normal","colors","transparent","accent","white","primary","transition","main","favorite","openModal","setOpenModal","useDeleteContactMutation","deleteContact","isDeleting","isLoading","useUpdateFavoriteMutation","updateFavorite","TableRow","TableCell","String","Grade","StarOutline","Edit","disabled","PersonRemove","isFetching","console","log","useSelector","getFilter","filtredContacts","toLowerCase","includes","length","Typography","align","color","TableContainer","Paper","Table","minWidth","TableHead","TableBody","map","dispatch","useDispatch","m","noValidate","setFilter","useAddContactMutation","addContact","handleAddContact","values","find","Contacts","xs","sm","alignItems"],"sourceRoot":""}