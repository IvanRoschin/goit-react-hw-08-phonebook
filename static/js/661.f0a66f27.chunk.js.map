{"version":3,"file":"static/js/661.f0a66f27.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","components/EditContactModal/EditContactModal.styled.js","components/EditContactModal/EditContactModal.js","components/Loader/Loader.jsx","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactFilter/Filter.js","components/ContactEditor/ContactEditor.js","pages/Contacts.js"],"sourcesContent":["import { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\n\nexport const ContactForm = ({ name = '', number = '', onSubmit, btnText }) => {\n  const [contactName, setContactName] = useState(name);\n  const [contactNumber, setContactNumber] = useState(number);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value.trim();\n    const contact = { name, number };\n\n    onSubmit(contact);\n    setContactName('');\n    setContactNumber('');\n    form.reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'number':\n        setContactNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '360px',\n        width: '100%',\n        p: '10px',\n      }}\n      autoComplete=\"off\"\n      required={true}\n      error=\"true\"\n      validate=\"true\"\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        label=\"Name\"\n        name=\"name\"\n        type=\"name\"\n        size=\"small\"\n        onChange={handleChange}\n        value={contactName}\n        sx={{ width: '100%' }}\n        required\n      />\n      <TextField\n        label=\"Number\"\n        name=\"number\"\n        type=\"phone\"\n        size=\"small\"\n        sx={{ width: '100%' }}\n        onChange={handleChange}\n        value={contactNumber}\n        required\n      />\n\n      <Button\n        sx={{ width: '120px', mx: 'auto' }}\n        type=\"submit\"\n        variant=\"outlined\"\n        size=\"small\"\n      >\n        {btnText}\n      </Button>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 99;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  width: auto;\n  padding: 24px;\n  background-color: white;\n`;\n\nexport const ModalCloseBtn = styled.button`\n display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    cursor: pointer;\n    top: 10px;\n    right: 10px;\n\n    width: 20px;\n    height: 20px;\n   \n    border-radius: 50%;\n    box-shadow: 0px 6px 6px 0px var(--button-bg-cl);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    background-color: var(--main-bg-cl);\n\n    font-size: 16px;\n    color: var(--main-text-cl);\n\n    transition: all 250ms linear;\n\n    &:focus,\n    &:hover {\n        background-color: var(--button-bg-cl);\n        border: 1px solid transparent;\n        fill: var(--main-bg-cl);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25)`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Overlay, Modal, ModalCloseBtn } from './EditContactModal.styled';\nimport { toast } from 'react-toastify';\nimport { RxCross1 } from 'react-icons/rx';\n\nimport {\n  useFetchContactsQuery,\n  useUpdateContactMutation,\n} from 'redux/contacts/slice';\n\nexport const EditContactModal = ({ closeModal, id }) => {\n  const { data: contacts } = useFetchContactsQuery();\n\n  const [updateContact] = useUpdateContactMutation();\n  const handleCloseModal = () => closeModal(false);\n  const findContactById = contacts.filter(contact => contact.id === id);\n\n  const handleUpdateContact = async fields => {\n    try {\n      await updateContact({ id, ...fields });\n      toast.success('Yoohoo, contact is updated');\n\n      handleCloseModal();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Overlay>\n      <Modal>\n        {contacts && (\n          <ContactForm\n            name={findContactById[0].name}\n            number={findContactById[0].number}\n            btnText=\"Save\"\n            onSubmit={handleUpdateContact}\n          />\n        )}\n        <ModalCloseBtn type=\"button\" onClick={handleCloseModal}>\n          <RxCross1 size={32} />\n        </ModalCloseBtn>\n      </Modal>\n    </Overlay>\n  );\n};\n","import { RotatingLines } from 'react-loader-spinner';\nexport default function ImagesPendungView() {\n  return (\n    <RotatingLines\n      strokeColor=\"#1976d2\"\n      strokeWidth=\"3\"\n      animationDuration=\"0.75\"\n      width=\"14\"\n      visible={true}\n    />\n  );\n}\n","import { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/slice';\nimport { EditContactModal } from 'components/EditContactModal/EditContactModal';\nimport { Loader } from 'components/Loader';\nimport { toast } from 'react-toastify';\nimport Button from '@mui/material/Button';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const handleDelete = e => {\n    e.preventDefault();\n    deleteContact(id);\n    toast.warning(`Contact is deleted`);\n  };\n  return (\n    <TableRow>\n      <TableCell>{name}</TableCell>\n      <TableCell>{number}</TableCell>\n      <TableCell>\n        <Button\n          variant=\"contained\"\n          type=\"button\"\n          onClick={() => {\n            setOpenModal(true);\n          }}\n        >\n          <EditIcon />\n        </Button>\n      </TableCell>\n      <TableCell>\n        <Button\n          variant=\"contained\"\n          type=\"button\"\n          disabled={isDeleting}\n          onClick={handleDelete}\n        >\n          {isDeleting ? <Loader /> : <PersonRemoveIcon />}\n        </Button>\n      </TableCell>\n      {openModal && <EditContactModal closeModal={setOpenModal} id={id} />}\n    </TableRow>\n  );\n};\n","import { useFetchContactsQuery } from 'redux/contacts/slice';\nimport { getFilter } from 'redux/contacts/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\n\nimport Typography from '@mui/material/Typography';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport { Loader } from 'components/Loader';\n\nexport const ContactList = () => {\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n  const filtredContacts = !contacts\n    ? []\n    : contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {!contacts ? (\n        <p>Your contactlist is empty</p>\n      ) : (\n        <TableContainer component={Paper}>\n          <Typography\n            variant=\"h6\"\n            component=\"h2\"\n            align=\"center\"\n            color=\"#1976d2\"\n          >\n            Your Contact List here\n          </Typography>\n          <Table sx={{ minWidth: 250 }} size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Phone</TableCell>\n                <TableCell>Change</TableCell>\n                <TableCell>Delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filtredContacts.map(contact => (\n                <ContactItem key={contact.id} {...contact} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleSearch = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Typography variant=\"h6\" component=\"h2\" color=\"#1976d2\">\n        Find contacts by name\n      </Typography>\n      <TextField\n        id=\"standard-search\"\n        label=\"Search field\"\n        type=\"search\"\n        variant=\"standard\"\n        onChange={handleSearch}\n      />\n    </Box>\n  );\n};\n","import {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/slice';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { toast } from 'react-toastify';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nexport const ContactEditor = () => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const handleAddContact = async values => {\n    const isExist = contacts.find(contact => contact.name === values.name);\n    if (isExist) {\n      toast.error(`${values.name} is already in contacts.`);\n      return;\n    }\n    try {\n      await addContact(values);\n      toast.success(`${values.name} is added to Phonebook.`);\n    } catch (error) {\n      toast.error(`error`);\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" component=\"h2\" align=\"center\" color=\"#1976d2\">\n        Add Contact\n      </Typography>\n      <ContactForm\n        btnText={`Add contact`}\n        onSubmit={handleAddContact}\n      ></ContactForm>\n    </Box>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/ContactFilter/Filter';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport Box from '@mui/material/Box';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          gap: 20,\n        }}\n      >\n        <ContactEditor />\n        <Filter />\n      </Box>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["ContactForm","name","number","onSubmit","btnText","useState","contactName","setContactName","contactNumber","setContactNumber","handleChange","e","target","value","Box","component","sx","display","flexDirection","gap","maxWidth","width","p","autoComplete","required","error","validate","preventDefault","form","elements","trim","reset","TextField","label","type","size","onChange","Button","mx","variant","Overlay","styled","Modal","ModalCloseBtn","EditContactModal","closeModal","id","contacts","useFetchContactsQuery","data","useUpdateContactMutation","updateContact","handleCloseModal","findContactById","filter","contact","handleUpdateContact","fields","toast","console","log","onClick","ImagesPendungView","strokeColor","strokeWidth","animationDuration","visible","ContactItem","openModal","setOpenModal","useDeleteContactMutation","deleteContact","isDeleting","isLoading","TableRow","TableCell","Edit","disabled","PersonRemove","ContactList","isFetching","useSelector","getFilter","filtredContacts","toLowerCase","includes","TableContainer","Paper","Typography","align","color","Table","minWidth","TableHead","TableBody","map","Filter","dispatch","useDispatch","m","noValidate","setFilter","ContactEditor","useAddContactMutation","addContact","handleAddContact","values","find","Contacts"],"sourceRoot":""}