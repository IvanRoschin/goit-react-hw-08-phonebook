{"version":3,"file":"static/js/431.b405f098.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/EditContactModal/EditContactModal.styled.js","redux/contacts/selectors.js","components/EditContactModal/EditContactModal.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactFilter/Filter.styled.js","components/ContactFilter/Filter.js","components/ContactEditor/ContactEditor.js","pages/Contacts.js"],"sourcesContent":["import { Form as FormikForm, Field as FormikField } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  width: 400px;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[5]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.border};\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const Label = styled.span`\n  font-family: ${p => p.theme.fonts.body};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.text};\n  transition: transform ${p => p.theme.transition.main};\n`;\n\nexport const InputName = styled.p`\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Field = styled(FormikField)`\n  width: 100%;\n  border-color: ${p => p.theme.colors.border};\n  margin-bottom: ${p => p.theme.space[6]}px;\n  padding: ${p => p.theme.space[3]}px;\n`;\n\nexport const Btn = styled.button`\n  width: 190px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: ${p => p.theme.space[3]}px;\n  text-align: center;\n  text-transform: uppercase;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.transparent};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 0 0 20px ${p => p.theme.colors.accent};\n  color: ${p => p.theme.colors.white};\n  background: ${p => p.theme.colors.primary};\n  background-size: 200% auto;\n  cursor: pointer;\n  transition: ${p => p.theme.transition.main};\n  &:hover {\n    color: ${p => p.theme.colors.primary};\n    text-decoration: none;\n    background: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.primary};\n  }\n`;\nexport const ErrorMessageCustom = styled.span`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-family: ${p => p.theme.fonts.monospace};\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.red};\n`;\n","import { Formik, ErrorMessage } from 'formik';\n\nimport { Label, Form, Field, Btn } from './ContactForm.styled';\n\nexport const ContactForm = ({\n  initialValues = { name: '', number: '' },\n  onSubmit,\n  btnText,\n}) => {\n  const handleSubmit = async (values, actions) => {\n    await onSubmit(values);\n    actions.setSubmitting(false);\n    actions.resetForm();\n  };\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      {({ isSubmitting }) => (\n        <Form id=\"form\">\n          <Label>Name</Label>\n          <ErrorMessage name=\"name\" />\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <Label>Number</Label>\n          <ErrorMessage name=\"number\" />\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Btn type=\"submit\" disabled={isSubmitting}>\n            {btnText}\n          </Btn>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  padding: 24px;\n  background-color: #fff;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  font-family: ${p => p.theme.fonts.heading};\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  text-align: center;\n`;\n\nexport const ModalCloseBtn = styled.button`\n display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    cursor: pointer;\n    top: 10px;\n    right: 10px;\n\n    width: 20px;\n    height: 20px;\n   \n    border-radius: 50%;\n    box-shadow: 0px 6px 6px 0px var(--button-bg-cl);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    background-color: var(--main-bg-cl);\n\n    font-size: 16px;\n    color: var(--main-text-cl);\n\n    transition: all 250ms linear;\n\n    &:focus,\n    &:hover {\n        background-color: var(--button-bg-cl);\n        border: 1px solid transparent;\n        fill: var(--main-bg-cl);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25)`;\n\n//     //  export const modalClosIcon.styled {\n//     // width: 12px;\n//     // height: 12px;\n// }\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectContactById = (state, id) =>\n  state.contacts.find(contact => contact.id === id);\n\nexport const selectFiltredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport {\n  Overlay,\n  Modal,\n  Title,\n  ModalCloseBtn,\n} from './EditContactModal.styled';\nimport { RxCross1 } from 'react-icons/rx';\nimport { updateContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectContactById } from 'redux/contacts/selectors';\n\n// import {\n//   useGetContactByIdQuery,\n//   useUpdateContactMutation,\n// } from 'redux/contactSlice';\n\nexport const EditContactModal = ({ closeModal, id }) => {\n  const dispatch = useDispatch();\n  const contact = useSelector(state => selectContactById(state, id));\n\n  useEffect(() => {\n    dispatch(updateContact(contact));\n  }, [dispatch, contact]);\n\n  // const { data: contact } = useGetContactByIdQuery(id);\n  // const [updateContact] = useUpdateContactMutation();\n  const handleCloseModal = () => closeModal(false);\n\n  const handleUpdateContact = async fields => {\n    try {\n      await updateContact({ id: id, ...fields });\n      handleCloseModal();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Overlay>\n      <Modal>\n        <Title>Contact Update</Title>\n        {contact && (\n          <ContactForm\n            initialValues={{ name: contact.name, phone: contact.phone }}\n            btnText=\"Save\"\n            onSubmit={handleUpdateContact}\n          />\n        )}\n        <ModalCloseBtn type=\"button\" onClick={handleCloseModal}>\n          <RxCross1 size={32} />\n        </ModalCloseBtn>\n      </Modal>\n    </Overlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${p => p.theme.space[2]};\n`;\n\nexport const LoadingText = styled.p`\n  font-weight: ${p => p.theme.fontWeights.normal};\n  text-transform: lowercase;\n  margin: 0;\n  margin-left: 10px;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Spinner, LoadingText } from './Loader.styled';\nexport default function ImagesPendungView() {\n  return (\n    <Spinner role=\"alert\">\n      <RotatingLines\n        strokeColor=\"#3f51b5\"\n        strokeWidth=\"3\"\n        animationDuration=\"0.75\"\n        width=\"14\"\n        visible={true}\n      />\n      <LoadingText>Loading...</LoadingText>\n    </Spinner>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  text-align: center;\n  text-transform: uppercase;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.transparent};\n  box-shadow: 0 0 20px ${p => p.theme.colors.accent};\n  color: ${p => p.theme.colors.white};\n  background: ${p => p.theme.colors.primary};\n  background-size: 200% auto;\n  cursor: pointer;\n  transition: ${p => p.theme.transition.main};\n  &:hover {\n    color: ${p => p.theme.colors.primary};\n    text-decoration: none;\n    background: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.primary};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { EditContactModal } from 'components/EditContactModal/EditContactModal';\nimport { Loader } from 'components/Loader';\nimport { toast } from 'react-toastify';\nimport { Btn } from './ContactItem.styled';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\n// import EditForm from 'components/editForm/EditForm';\n\nconst ContactItem = ({ id, name, phone }) => {\n  const [openModal, setOpenModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleDelete = e => {\n    e.preventDefault();\n    dispatch(deleteContact(id));\n    toast.warning(`Contact is deleted`);\n  };\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{phone}</td>\n      <td>\n        <Btn\n          type=\"button\"\n          onClick={() => {\n            setOpenModal(true);\n          }}\n        >\n          Update\n        </Btn>\n      </td>\n      {openModal && <EditContactModal closeModal={setOpenModal} id={id} />}\n      <td>\n        <Btn type=\"button\" disabled={isLoading} onClick={handleDelete}>\n          {isLoading ? <Loader /> : 'Delete'}\n        </Btn>\n      </td>\n    </tr>\n  );\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport ContactItem from 'components/ContactItem';\nimport { selectFiltredContacts } from 'redux/contacts/selectors';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader';\n\nexport const ContactList = () => {\n  const filtredContacts = useSelector(selectFiltredContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      {!filtredContacts ? (\n        <p>Your contactlist is empty</p>\n      ) : (\n        <table>\n          <thead>\n            {filtredContacts.map(contact => (\n              <ContactItem key={contact.id} {...contact} />\n            ))}\n          </thead>\n        </table>\n      )}\n      {isLoading && <Loader />}\n    </>\n\n    // <ul>\n    //   {filtredContacts.map(contact => (\n    //     <ContactItem contact={contact} key={contact.id} />\n    //   ))}\n    // </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  width: 200px;\n  margin-bottom: 20px;\n  padding: 5px;\n`;\n\nexport const FilterTitle = styled.h3`\n  margin-bottom: 20px;\n  font-weight: 600;\n`;\n","import { FilterInput, FilterTitle } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterMyContact } from 'redux/contacts/slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const changeFilter = event => {\n    dispatch(filterMyContact(event.currentTarget.value));\n  };\n\n  return (\n    <>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <FilterInput\n        type=\"text\"\n        onChange={changeFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleAddContact = ({ name, number }) => {\n    const isExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isExist) {\n      toast.error(`${name} is already in contacts.`);\n      // resetForm();\n      return;\n    }\n    const contact = {\n      name,\n      number,\n    };\n    dispatch(addContact(contact));\n    toast.success(`${name} is added to Phonebook.`);\n  };\n\n  return (\n    <ContactForm\n      btnText={`Add contact`}\n      onSubmit={handleAddContact}\n    ></ContactForm>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/ContactFilter/Filter';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...' && <Loader />}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\n// import ContactList from 'components/ContactList';\n\n// export default function Contacts() {\n//   return (\n//     <>\n//       <p>Contact List here</p>\n//       {/* <ContactList /> */}\n//     </>\n//   );\n// }\n"],"names":["Form","styled","FormikForm","p","theme","space","radii","normal","borders","colors","border","accent","Label","fonts","body","fontWeights","bold","fontSizes","m","text","transition","main","Field","FormikField","Btn","transparent","white","primary","monospace","s","red","ContactForm","initialValues","name","number","onSubmit","btnText","handleSubmit","values","actions","setSubmitting","resetForm","isSubmitting","id","type","pattern","title","required","disabled","Overlay","Modal","Title","heading","l","ModalCloseBtn","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFiltredContacts","createSelector","filter","normalizedFilter","toLowerCase","includes","EditContactModal","closeModal","dispatch","useDispatch","contact","useSelector","find","selectContactById","useEffect","updateContact","handleCloseModal","handleUpdateContact","fields","console","log","phone","onClick","size","Spinner","LoadingText","ImagesPendungView","role","strokeColor","strokeWidth","animationDuration","width","visible","useState","openModal","setOpenModal","e","preventDefault","deleteContact","toast","ContactList","filtredContacts","map","FilterInput","FilterTitle","Filter","onChange","event","filterMyContact","currentTarget","value","ContactEditor","isExist","addContact","Contacts","fetchContacts"],"sourceRoot":""}