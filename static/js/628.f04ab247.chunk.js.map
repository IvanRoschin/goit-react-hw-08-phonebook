{"version":3,"file":"static/js/628.f04ab247.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/EditContactModal/EditContactModal.styled.js","components/EditContactModal/EditContactModal.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactFilter/Filter.styled.js","components/ContactFilter/Filter.js","components/ContactEditor/ContactEditor.js","pages/Contacts.js"],"sourcesContent":["import { Form as FormikForm, Field as FormikField } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  width: 400px;\n  align-items: center;\n  padding: ${p => p.theme.space[6]}px ${p => p.theme.space[5]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.border};\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const Label = styled.span`\n  font-family: ${p => p.theme.fonts.body};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.text};\n  transition: transform ${p => p.theme.transition.main};\n`;\n\nexport const InputName = styled.p`\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Field = styled(FormikField)`\n  width: 100%;\n  border-color: ${p => p.theme.colors.border};\n  margin-bottom: ${p => p.theme.space[6]}px;\n  padding: ${p => p.theme.space[3]}px;\n`;\n\nexport const Btn = styled.button`\n  width: 190px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: ${p => p.theme.space[3]}px;\n  text-align: center;\n  text-transform: uppercase;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.transparent};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 0 0 20px ${p => p.theme.colors.accent};\n  color: ${p => p.theme.colors.white};\n  background: ${p => p.theme.colors.primary};\n  background-size: 200% auto;\n  cursor: pointer;\n  transition: ${p => p.theme.transition.main};\n  &:hover {\n    color: ${p => p.theme.colors.primary};\n    text-decoration: none;\n    background: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.primary};\n  }\n`;\nexport const ErrorMessageCustom = styled.span`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-family: ${p => p.theme.fonts.monospace};\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.red};\n`;\n","import { Formik, ErrorMessage } from 'formik';\n\nimport { Label, Form, Field, Btn } from './ContactForm.styled';\n\nexport const ContactForm = ({\n  initialValues = { name: '', number: '' },\n  onSubmit,\n  btnText,\n}) => {\n  const handleSubmit = async (values, actions) => {\n    await onSubmit(values);\n    actions.setSubmitting(false);\n    actions.resetForm();\n  };\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      {({ isSubmitting }) => (\n        <Form id=\"form\">\n          <Label>Name</Label>\n          <ErrorMessage name=\"name\" />\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <Label>Number</Label>\n          <ErrorMessage name=\"number\" />\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Btn type=\"submit\" disabled={isSubmitting}>\n            {btnText}\n          </Btn>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  padding: 24px;\n  background-color: #fff;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  font-family: ${p => p.theme.fonts.heading};\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  text-align: center;\n`;\n\nexport const ModalCloseBtn = styled.button`\n display: flex;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    cursor: pointer;\n    top: 10px;\n    right: 10px;\n\n    width: 20px;\n    height: 20px;\n   \n    border-radius: 50%;\n    box-shadow: 0px 6px 6px 0px var(--button-bg-cl);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    background-color: var(--main-bg-cl);\n\n    font-size: 16px;\n    color: var(--main-text-cl);\n\n    transition: all 250ms linear;\n\n    &:focus,\n    &:hover {\n        background-color: var(--button-bg-cl);\n        border: 1px solid transparent;\n        fill: var(--main-bg-cl);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25)`;\n\n//     //  export const modalClosIcon.styled {\n//     // width: 12px;\n//     // height: 12px;\n// }\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport {\n  Overlay,\n  Modal,\n  Title,\n  ModalCloseBtn,\n} from './EditContactModal.styled';\nimport { toast } from 'react-toastify';\nimport { RxCross1 } from 'react-icons/rx';\n\nimport {\n  useFetchContactsQuery,\n  useUpdateContactMutation,\n} from 'redux/contacts/slice';\n\nexport const EditContactModal = ({ closeModal, id }) => {\n  const { data: contacts } = useFetchContactsQuery();\n  const [updateContact] = useUpdateContactMutation();\n  const handleCloseModal = () => closeModal(false);\n  const findContactById = contacts.filter(contact => contact.id === id);\n\n  const handleUpdateContact = async fields => {\n    try {\n      await updateContact({ id, ...fields });\n      toast.success('Yoohoo, contact is updated');\n\n      handleCloseModal();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Overlay>\n      <Modal>\n        <Title>Contact Update</Title>\n        {contacts && (\n          <ContactForm\n            initialValues={{\n              name: findContactById[0].name,\n              number: findContactById[0].number,\n            }}\n            btnText=\"Save\"\n            onSubmit={handleUpdateContact}\n          />\n        )}\n        <ModalCloseBtn type=\"button\" onClick={handleCloseModal}>\n          <RxCross1 size={32} />\n        </ModalCloseBtn>\n      </Modal>\n    </Overlay>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${p => p.theme.space[2]};\n`;\n\nexport const LoadingText = styled.p`\n  font-weight: ${p => p.theme.fontWeights.normal};\n  text-transform: lowercase;\n  margin: 0;\n  margin-left: 10px;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Spinner, LoadingText } from './Loader.styled';\nexport default function ImagesPendungView() {\n  return (\n    <Spinner role=\"alert\">\n      <RotatingLines\n        strokeColor=\"#3f51b5\"\n        strokeWidth=\"3\"\n        animationDuration=\"0.75\"\n        width=\"14\"\n        visible={true}\n      />\n      <LoadingText>Loading...</LoadingText>\n    </Spinner>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  list-style: disc;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\nexport const Btn = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  text-align: center;\n  text-transform: uppercase;\n  outline: none;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.transparent};\n  box-shadow: 0 0 20px ${p => p.theme.colors.accent};\n  color: ${p => p.theme.colors.white};\n  background: ${p => p.theme.colors.primary};\n  background-size: 200% auto;\n  cursor: pointer;\n  transition: ${p => p.theme.transition.main};\n  &:hover {\n    color: ${p => p.theme.colors.primary};\n    text-decoration: none;\n    background: ${p => p.theme.colors.white};\n    border-color: ${p => p.theme.colors.primary};\n  }\n`;\n","import { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/slice';\nimport { EditContactModal } from 'components/EditContactModal/EditContactModal';\nimport { Loader } from 'components/Loader';\nimport { toast } from 'react-toastify';\nimport { Btn, ListItem } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const handleDelete = e => {\n    e.preventDefault();\n    deleteContact(id);\n    toast.warning(`Contact is deleted`);\n  };\n  return (\n    <ListItem>\n      {name}: {number}\n      <div>\n        <Btn\n          type=\"button\"\n          onClick={() => {\n            setOpenModal(true);\n          }}\n        >\n          Update\n        </Btn>\n        <Btn type=\"button\" disabled={isDeleting} onClick={handleDelete}>\n          {isDeleting ? <Loader /> : 'Delete'}\n        </Btn>\n      </div>\n      {openModal && <EditContactModal closeModal={setOpenModal} id={id} />}\n    </ListItem>\n  );\n};\n","import { useFetchContactsQuery } from 'redux/contacts/slice';\nimport { getFilter } from 'redux/contacts/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { Loader } from 'components/Loader';\n\nexport const ContactList = () => {\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n  const filtredContacts = !contacts\n    ? []\n    : contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {!contacts ? (\n        <p>Your contactlist is empty</p>\n      ) : (\n        <ul>\n          {filtredContacts.map(contact => (\n            <ContactItem key={contact.id} {...contact} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Filterlabel = styled.p`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 230px;\n  font-size: ${p => p.theme.fontSizes.m};\n  border: ${p => p.theme.borders.normal};\n  outline: none;\n`;\n","import { DebounceInput } from 'react-debounce-input';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterContainer, Filterlabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleSearch = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <FilterContainer>\n      <Filterlabel>Find contacts by name</Filterlabel>\n      <DebounceInput\n        minLength={2}\n        debounceTimeout={300}\n        onChange={handleSearch}\n      />\n    </FilterContainer>\n  );\n};\n","import {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/slice';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { toast } from 'react-toastify';\n\nexport const ContactEditor = () => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const handleAddContact = async values => {\n    const isExist = contacts.find(contact => contact.name === values.name);\n    if (isExist) {\n      toast.error(`${values.name} is already in contacts.`);\n      return;\n    }\n    try {\n      await addContact(values);\n      toast.success(`${values.name} is added to Phonebook.`);\n    } catch (error) {\n      toast.error(`error`);\n    }\n  };\n\n  return (\n    <ContactForm\n      btnText={`Add contact`}\n      onSubmit={handleAddContact}\n    ></ContactForm>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/ContactFilter/Filter';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\n\nexport default function Contacts() {\n  return (\n    <>\n      <ContactEditor />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Form","styled","FormikForm","p","theme","space","radii","normal","borders","colors","border","accent","Label","fonts","body","fontWeights","bold","fontSizes","m","text","transition","main","Field","FormikField","Btn","transparent","white","primary","monospace","s","red","ContactForm","initialValues","name","number","onSubmit","btnText","handleSubmit","values","actions","setSubmitting","resetForm","isSubmitting","id","type","pattern","title","required","disabled","Overlay","Modal","Title","heading","l","ModalCloseBtn","EditContactModal","closeModal","contacts","useFetchContactsQuery","data","useUpdateContactMutation","updateContact","handleCloseModal","findContactById","filter","contact","handleUpdateContact","fields","toast","console","log","onClick","size","Spinner","LoadingText","ImagesPendungView","role","strokeColor","strokeWidth","animationDuration","width","visible","ListItem","ContactItem","useState","openModal","setOpenModal","useDeleteContactMutation","deleteContact","isDeleting","isLoading","e","preventDefault","ContactList","isFetching","useSelector","getFilter","filtredContacts","toLowerCase","includes","map","FilterContainer","Filterlabel","Filter","dispatch","useDispatch","DebounceInput","minLength","debounceTimeout","onChange","setFilter","target","value","ContactEditor","useAddContactMutation","addContact","handleAddContact","find","Contacts"],"sourceRoot":""}